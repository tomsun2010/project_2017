##
## unit_test/private/iav_test/make.inc
##
## History:
##    2012/06/05 - [Cao Rongrong] Created file
##
## Copyright (C) 2011-2015, Ambarella, Inc.
##
## All rights reserved. No Part of this file may be reproduced, stored
## in a retrieval system, or transmitted, in any form, or by any means,
## electronic, mechanical, photocopying, recording, or otherwise,
## without the prior consent of Ambarella, Inc.
##

ifeq ($(BUILD_AMBARELLA_UNIT_TESTS_IAV), y)

LOCAL_PATH	:= $(call my-dir)

ifeq ($(BUILD_AMBARELLA_IAV_AUTO_TEST), y)
include $(call all-subdir-makefiles)
endif

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= test_privacymask
LOCAL_SRCS	:= $(LOCAL_PATH)/test_privacymask.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= dsplog
LOCAL_SRCS	:= $(LOCAL_PATH)/dsplog.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@if [ ! -e $(UNIT_TEST_PATH)/capture_log ]; then ln -s dsplog $(UNIT_TEST_PATH)/capture_log; fi
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= dsplog2
LOCAL_SRCS	:= $(LOCAL_PATH)/dsplog2.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@if [ ! -e $(UNIT_TEST_PATH)/parse_log ]; then ln -s dsplog2 $(UNIT_TEST_PATH)/parse_log; fi
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= test_encode
LOCAL_SRCS	:= $(LOCAL_PATH)/test_encode.c
ifeq ($(BUILD_AMBARELLA_PARFILE_PACKAGE), y)
LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/parfile
LOCAL_LIBS	:= libpar.a
endif
include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
ifeq ($(BUILD_AMBARELLA_DATATX_PACKAGE), y)

include $(CLEAR_VARS)

LOCAL_TARGET	:= test_stream
LOCAL_SRCS	:= $(LOCAL_PATH)/test_stream.c
LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/data_transfer
LOCAL_LIBS	:= libdatatx.a

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

endif

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= test_directsharing
LOCAL_SRCS	:= $(LOCAL_PATH)/test_directsharing.cpp
LOCAL_CFLAGS	:= -I$(LOCAL_PATH)/directsharing_lib/include
LOCAL_LDFLAGS	:= -L$(LOCAL_PATH)/directsharing_lib/lib -lpthread -lm -lmwcg_common -lmwcg_directsharing -lmwcg_common -lm -lpthread 

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))


###
ifeq ($(BUILD_AMBARELLA_BSREADER_PACKAGE), y)
ifeq ($(BUILD_AMBARELLA_DATATX_PACKAGE), y)

include $(CLEAR_VARS)

LOCAL_TARGET	:= test_bsreader
LOCAL_SRCS	:= $(LOCAL_PATH)/test_bsreader.c
LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/bsreader \
	-I$(AMB_TOPDIR)/packages/data_transfer
LOCAL_LDFLAGS	:= -lpthread
LOCAL_LIBS	:= libbsreader.a libdatatx.a

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

endif
endif

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= test_statistics
LOCAL_SRCS	:= $(LOCAL_PATH)/test_statistics.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= test_dptz
LOCAL_SRCS	:= $(LOCAL_PATH)/test_dptz.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= test_overlay
LOCAL_SRCS	:= $(LOCAL_PATH)/test_overlay.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= test_loadbmp
LOCAL_SRCS	:= $(LOCAL_PATH)/test_loadbmp.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): PRIVATE_PATH:=$(LOCAL_PATH)
$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/data/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@cp -dpRf $(PRIVATE_PATH)/data/Ambarella-256x128-8bit.bmp $(UNIT_TEST_PATH)/data/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
ifeq ($(BUILD_AMBARELLA_DATATX_PACKAGE), y)

include $(CLEAR_VARS)

LOCAL_TARGET	:= test_yuvcap
LOCAL_SRCS	:= $(LOCAL_PATH)/test_yuvcap.c
LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/data_transfer
LOCAL_LIBS	:= libdatatx.a

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

endif

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= test_warp
LOCAL_SRCS	:= $(LOCAL_PATH)/test_warp.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
include $(CLEAR_VARS)

LOCAL_TARGET	:= guard_vsync_loss
LOCAL_SRCS	:= $(LOCAL_PATH)/guard_vsync_loss.c

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

###
include $(CLEAR_VARS)

#ifeq ($(BUILD_AMBARELLA_PARFILE_PACKAGE), y)
#LOCAL_TARGET	:= enc
#LOCAL_SRCS	:= $(LOCAL_PATH)/test_enc.c
#LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/parfile -I$(AMB_TOPDIR)/packages/textinsert -I$(AMB_TOPDIR)/kernel/private/lib/firmware_s3
#LOCAL_LDFLAGS	:= -lpthread -lm \
#                    -L $(AMB_BOARD_OUT)/fakeroot/usr/lib -lfreetype -lbz2 -lz
#LOCAL_LIBS	:= libpar.a libtextinsert.a libimg_algo_s3.a
#ifeq ($(BUILD_AMBARELLA_IMGPROC_PACKAGE), y)
#LOCAL_LIBS	+= libimg_algo_s3.a
#endif
#LOCAL_LIBS	+= libtextinsert.a
#
#include $(BUILD_APP)
#
#.PHONY: $(LOCAL_TARGET)
#
#$(LOCAL_TARGET): $(LOCAL_MODULE)
#	@mkdir -p $(UNIT_TEST_PATH)/
#	@cp -dpRf $< $(UNIT_TEST_PATH)/
#	@echo "Build $@ Done."
#
#$(call add-target-into-build, $(LOCAL_TARGET))
#endif

###
#include $(CLEAR_VARS)
#
#ifeq ($(BUILD_AMBARELLA_PARFILE_PACKAGE), y)
#LOCAL_TARGET	:= dec
#LOCAL_SRCS	:= $(LOCAL_PATH)/test_dec.c
#LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/parfile -I$(AMB_TOPDIR)/packages/textinsert -I$(AMB_TOPDIR)/kernel/private/lib/firmware_s3
#LOCAL_LDFLAGS	:= -L $(AMB_BOARD_OUT)/fakeroot/usr/lib -lfreetype -lbz2 -lz
#          
#LOCAL_LIBS	:= libpar.a libtextinsert.a
#include $(BUILD_APP)
#.PHONY: $(LOCAL_TARGET)
#
#$(LOCAL_TARGET): $(LOCAL_MODULE)
#	@mkdir -p $(UNIT_TEST_PATH)/
#	@cp -dpRf $< $(UNIT_TEST_PATH)/
#	@echo "Build $@ Done."
#  
#$(call add-target-into-build, $(LOCAL_TARGET))
#endif

###
include $(CLEAR_VARS)

ifeq ($(BUILD_AMBARELLA_PARFILE_PACKAGE), y)
LOCAL_TARGET	:= show_logo
LOCAL_SRCS	:= $(LOCAL_PATH)/test_logo.c
LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/parfile -I$(AMB_TOPDIR)/kernel/private/lib/firmware_s3
LOCAL_LIBS	:= libpar.a
include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))
endif

###
include $(CLEAR_VARS)

ifeq ($(BUILD_AMBARELLA_PARFILE_PACKAGE), y)
LOCAL_TARGET	:= dsp_suspend
LOCAL_SRCS	:= $(LOCAL_PATH)/test_dsp_suspend.c
LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/parfile -I$(AMB_TOPDIR)/kernel/private/lib/firmware_s3
LOCAL_LIBS	:= libpar.a

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))
endif

###
LOCAL_TARGET	:= exposure_man
LOCAL_SRCS	:= $(LOCAL_PATH)/exposure_man.c
LOCAL_CFLAGS	:= 
LOCAL_LIBS	:= 

include $(BUILD_APP)

.PHONY: $(LOCAL_TARGET)

$(LOCAL_TARGET): $(LOCAL_MODULE)
	@mkdir -p $(UNIT_TEST_PATH)/
	@cp -dpRf $< $(UNIT_TEST_PATH)/
	@echo "Build $@ Done."

$(call add-target-into-build, $(LOCAL_TARGET))

endif

