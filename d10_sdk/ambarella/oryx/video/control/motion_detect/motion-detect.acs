--[[
/S2L/oryx/video/control/motion_detect/motion-detect.acs

History:
  May 3, 2016 - [binwang] created file

Copyright (c) 2016 Ambarella, Inc.

This file and its contents ("Software") are protected by intellectual
property rights including, without limitation, U.S. and/or foreign
copyrights. This Software is also the confidential and proprietary
information of Ambarella, Inc. and its licensors. You may not use, reproduce,
disclose, distribute, modify, or otherwise prepare derivative works of this
Software or any portion thereof except pursuant to a signed license agreement
or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
In the absence of such an agreement, you agree to promptly notify and return
this Software to Ambarella, Inc.

THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

--]]

-- This is the configuration of motion detect
--[[
md_enable (bool): true|false, false means disable motion detect

md_source_buffer_id: 0|1|2|3, 0:main source buffer,  1:second source buffer
                              2:third source buffer, 3:fourth source buffer
                     We use ME1 buffer's data to do motion detection.
                     ME1 buffer size is 1/4 of the corresponding source buffer,
                     and ME1 buffer only has Y component.

md_source_buffer_type: ME0|ME1|YUV, ME0: ME0 buffer, ME1: ME1 buffer
                                    YUV: YUV buffer
         ME0 buffer size is 1/8 or 1/16 of the corresponding source buffer, and
         ME0 buffer data only has Y component.
         Users need to config ME0 scale in resouce limit config files if they
         want to use ME0 buffer.
         --me0_scale: Specify ME0 scale factor. 0: Off,
         1: 8X downscale, 2: 16X downscale, Default is disabled.
         ME1 buffer size is 1/4 of the corresponding source buffer,
         and ME1 buffer only has Y component.
         YUV buffer size is the same size of the source buffer. Motion detect
         only uses the Y component.

md_roi   valid(bool): true|false. false valid means this ROI will be ignored.
         Make sure all of left, right, top and bottom to 0 if valid is false.
         left, right, top, bottom use offset to specify the location of the ROI.
         If default main source buffer(0) size is 1920x1080, then
         ME1 buffer of main source buffer(0) size is 480x270. 
         {left=0, right=479, top=0, bottom=269} means this ROI includes the whole
         region of the buffer.

md_th    motion value < th1, output motion level is level0(no motion, static)
         th1 =< motion value < th2, output motion level is level1(small motion)
         th2 =< motion value, output motion level is level2(big motion)

md_lc_delay  motion level changed delay of ROI.
             Current motion level is L1(small motion). If motion value is consecutive 'ml0_delay' times less than th1,
             motion level will be set to level0(no motion)
             Current motion level is L2(big motion). If motion value is consecutive 'ml1_delay' times less than th2,
             motion level will be set to level1(small motion)
--]]

__motion_detect__ = {
  name = "motion_detect",
  md_enable = true,
  md_source_buffer_id = 1,
  md_source_buffer_type = "ME1",
  roi_config = {
    {
      --ROI#0
      --md_roi
      valid = true,
      left = 0,
      right = 179,
      top = 0,
      bottom = 119,
      --md_th
      th1 = 1000,
      th2 = 10000,
      --md_lc_delay
      ml0c_delay = 30,
      ml1c_delay = 10,
    },
    {
      --ROI#1
      --md_roi
      valid = false,
      left = 0,
      right = 0,
      top = 0,
      bottom = 0,
      --md_th
      th1 = 0,
      th2 = 0,
      --md_lc_delay
      ml0c_delay = 0,
      ml1c_delay = 0,
    },
    {
      --ROI#2
      --md_roi
      valid = false,
      left = 0,
      right = 0,
      top = 0,
      bottom = 0,
      --md_th
      th1 = 0,
      th2 = 0,
      --md_lc_delay
      ml0c_delay = 0,
      ml1c_delay = 0,
    },
    {
      --ROI#3
      --md_roi
      valid = false,
      left = 0,
      right = 0,
      top = 0,
      bottom = 0,
      --md_th
      th1 = 0,
      th2 = 0,
      --md_lc_delay
      ml0c_delay = 0,
      ml1c_delay = 0,
    },
  },
}

return __motion_detect__